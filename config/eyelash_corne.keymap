#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include <input/processors.dtsi>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#undef ZMK_MOUSE_DEFAULT_MOVE_VAL
#undef ZMK_MOUSE_DEFAULT_SCRL_VAL
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#define COLEMAK 0
#define MEDIA   1
#define SYMBOLS 2
#define EXTEND  3
#define NAV     4
#define FUNC    5

#define KEYS_LEFT     0  1  2  3  4  5 13 14 15 16 17 18 28 29 30 31 32 33 // left-hand keys
#define KEYS_RIGHT    7  8  9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41 // right-hand keys
#define KEYS_THUMBS  42 43 44 45 46 47                                     // thumb keys
#define KEYS_5WAY     6 19 20 21 35                                        // five-way switch
#define KEY_ENCODER  34                                                    // push on rotary encoder

#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define U_WH_U &msc SCRL_UP
#define U_WH_D &msc SCRL_DOWN
#define U_WH_L &msc SCRL_LEFT
#define U_WH_R &msc SCRL_RIGHT

#define MEDIA_ESC &lt MEDIA ESC
#define MEDIA_ENT &lt MEDIA ENTER
#define EXT_TAB &lt EXTEND TAB
#define LCTRL_LGUI &mt LCTRL LGUI
#define TAB_L &kp LC(LA(PG_UP))
#define TAB_R &kp LC(LA(PG_DN))

/* Application shortcuts */
#define APP_FFOX &kp LC(LG(W))
#define APP_FILE &kp LC(LG(F))
#define APP_CODE &kp LC(LG(L))
#define APP_JOPL &kp LC(LG(J))
#define APP_SIGN &kp LC(LG(A))
#define APP_SKYP &kp LC(LG(Y))
#define APP_SLAC &kp LC(LG(S))
#define APP_BTRM &kp LC(LG(B))
#define APP_NTRM &kp LC(LG(T))
#define APP_SCRP &kp LC(LG(X))
#define APP_TRSM &kp LC(LG(O))

/ {
    macros {
        parent_dir: parent_dir {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp DOT &kp DOT &kp SLASH>;
        };
        home_dir: home_dir {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp TILDE &kp SLASH>;
        };
        new_sentence: new_sentence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp DOT &kp SPACE>
                , <&sk LSHFT>
                ;
        };
        workspace: workspace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp TILDE &kp SLASH>
                , <&macro_tap &kp W &kp O &kp R &kp K &kp S &kp P &kp A &kp C &kp E>
                , <&macro_tap &kp SLASH>
                ;
        };
    };

    behaviors {
        hrl: home_row_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_RIGHT KEYS_THUMBS KEYS_5WAY>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        hrr: home_row_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_LEFT KEYS_THUMBS KEY_ENCODER>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        ext_capsword: extend_capsword {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <0>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&mo EXTEND>, <&caps_word>;
        };

        symb_altgr: symbols_altgr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <0>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&mo SYMBOLS>, <&sk RALT>;
        };

        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        td_extcaps: tap_dance_ext_caps {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&ext_capsword>, <&kp CAPSLOCK>;
        };

        comm_grv: comma_grave {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp GRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_tld: dot_tilde {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp TILDE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        at_caret: at_caret {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp AT>, <&kp CARET>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dlr_prc: dollar_percent {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOLLAR>, <&kp PERCENT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        pipe_quest: pipe_quest {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PIPE>, <&kp QUESTION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        excl_bslsh: exclam_bslash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EXCL>, <&kp BACKSLASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        srch_prv: search_prev {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(F3)>, <&kp LC(F8)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        srch_nxt: search_next {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp F3>, <&kp F8>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <30>;
    };


    combos {
        compatible = "zmk,combos";
        combo_under {
            timeout-ms = <50>;
            key-positions = <23 37>;
            bindings = <&kp UNDER>;
            layers = <COLEMAK>;
        };
        combo_minus {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp MINUS>;
            layers = <COLEMAK>;
        };
        combo_sqt {
            timeout-ms = <50>;
            key-positions = <9 24>;
            bindings = <&kp SQT>;
            layers = <COLEMAK>;
        };
        combo_dqt {
            timeout-ms = <50>;
            key-positions = <10 25>;
            bindings = <&kp DQT>;
            layers = <COLEMAK>;
        };
        combo_colon {
            timeout-ms = <50>;
            key-positions = <17 32>;
            bindings = <&kp COLON>;
            layers = <COLEMAK>;
        };
        combo_semi {
            timeout-ms = <50>;
            key-positions = <16 31>;
            bindings = <&kp SEMI>;
            layers = <COLEMAK>;
        };
        combo_excl {
            timeout-ms = <50>;
            key-positions = <26 40>;
            bindings = <&kp EXCL>;
            layers = <COLEMAK>;
        };
        combo_save {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp LC(S)>;
            layers = <COLEMAK>;
        };
        combo_backslash {
            timeout-ms = <50>;
            key-positions = <25 39>;
            bindings = <&kp BACKSLASH>;
            layers = <SYMBOLS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "COLEMAK";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │MD/ESC│  Q  │  W  │  F  │  P  │  B  │                ┃  ↑  ┃         │  J  │  L  │  U  │  Y  │  ;  │ BKSP │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │EX/TAB│  A  │  R  │  S  │  T  │  G  │          ┃  ←  ┃enter┃  →  ┃   │  M  │  N  │  E  │  I  │  O  │MD/ENT│
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │CTL/SP│  Z  │  X  │  C  │  D  │  V  │ ┃MUTE┃         ┃  ↓  ┃         │  K  │  H  │ , ` │ . ~ │  /  │Alt/' │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │ NAV │ SFT │ EXT │                        │ SYM │ SPC │ Fn  │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
MEDIA_ESC  &kp Q        &kp W        &kp F         &kp P         &kp B                           &kp UP                 &kp J        &kp L         &kp U        &kp Y        &kp SEMI    &kp BSPC
EXT_TAB    &hrl LGUI A  &hrl LALT R  &hrl LSHFT S  &hrl LCTRL T  &kp G                 &kp LEFT  &kp ENTER  &kp RIGHT   &kp M        &hrr LCTRL N  &hrr LSHFT E &hrr LALT I  &hrr LGUI O MEDIA_ENT
LCTRL_LGUI &kp Z        &kp X        &kp C         &kp D         &kp V      &kp SPACE            &kp DOWN               &kp K        &kp H         &comm_grv    &dot_tld     &kp FSLH    &mt LALT SQT
                                                  &mo NAV  &kp LSHIFT &td_extcaps                               &symb_altgr  &kp SPACE  &mo FUNC
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        media_layer {
            display-name = "MEDIA";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │ ESC  │MUTE │VOL- │VOL+ │ MIC │ F5  │                ┃ s↑  ┃         │     │ mL  │ m↑  │ mR  │     │ PGUP │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │BRI- │BRI+ │DISP │     │          ┃ s←  ┃enter┃ s→  ┃   │ZOOM+│ m←  │ m↓  │ m→  │  ↑  │ PGDN │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │PLAY │STOP │PREV │NEXT │     │ ┃MUTE┃         ┃ s↓  ┃         │ZOOM-│ mM  │     │  ←  │  ↓  │  →   │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │HOME │     │ END │I
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&kp ESC    &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP  &kp F20       &kp F5                        U_WH_U             &none         &mkp LCLK    U_MS_U      &mkp RCLK    &none       &kp PG_UP    
&none      &none        &kp C_BRI_DN &kp C_BRI_UP  &none         &none                 U_WH_L  &kp ENTER  U_WH_R  &kp LC(PLUS)  U_MS_L       U_MS_D      U_MS_R       &kp UP      &kp PG_DN
&none      &kp C_PLAY   &kp C_STOP   &kp C_PREV    &kp C_NEXT    &none      &kp SPACE          U_WH_D             &kp LC(MINUS) &mkp MCLK    &none       &kp LEFT     &kp DOWN    &kp RIGHT
                                                  &trans   &trans  &trans                                     &kp HOME   &trans  &kp END
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        symbols_layer {
            display-name = "SYMBOLS";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │  x   │  >  │  7  │  8  │  9  │ @ ^ │                ┃  ↑  ┃         │  &  │  (  │  )  │  {  │  }  │ BKSP │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │ TAB  │  .  │  1  │  2  │  3  │  #  │          ┃  ←  ┃enter┃  →  ┃   │  =  │  -  │  +  │  /  │  *  │ ENT  │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │  <  │  4  │  5  │  6  │ $ % │ ┃MUTE┃         ┃  ↓  ┃         │ ! \ │  _  │ , ` │ . ~ │ | ? │ Comp │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │Sft/0│     │                        │     │     │     │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&kp X      &kp GT        &kp N7       &kp N8        &kp N9        &at_caret                        &kp UP                 &kp AMPS     &kp LPAR      &kp RPAR     &kp LBRC     &kp RBRC    &kp BSPC
&kp TAB    &hrl LGUI DOT &hrl LALT N1 &hrl LSHFT N2 &hrl LCTRL N3 &kp HASH               &kp LEFT  &kp ENTER  &kp RIGHT   &kp EQUAL    &hrr LCTRL MINUS &hrr LSHFT PLUS &hrr LALT SLASH &hrr LGUI STAR &kp ENTER
&none      &kp LT        &kp N4       &kp N5        &kp N6        &dlr_prc    &kp SPACE            &kp DOWN               &excl_bslsh  &kp UNDER     &kp LBKT     &kp RBKT     &pipe_quest &kp RGUI
                                                  &trans  &mt LSHIFT 0 &trans                                   &trans  &trans  &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        extend_layer {
            display-name = "EXTEND";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │ ESC  │  Q  │  W  │  F  │  P  │  B  │                ┃  ↑  ┃         │  J  │  L  │  U  │  Y  │  ;  │ BKSP │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │ TAB  │  A  │  R  │  S  │  T  │  G  │          ┃  ←  ┃enter┃  →  ┃   │  M  │  N  │  E  │  I  │  O  │ ENT  │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │CTL/SP│  Z  │  X  │  C  │  D  │  V  │ ┃MUTE┃         ┃  ↓  ┃         │  K  │  H  │ , ` │ . ~ │  /  │Alt/' │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │ GUI │ SFT │ SPC │                        │ ENT │ SPC │ ALT │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&none       &kp ESC      &kp LC(W)    &kp LC(F)     &none         &kp INS                         &kp UP                 &kp HOME     &kp PGUP      &kp UP       &kp PGDN   &none       &kp DEL
&kp LA(TAB) &sk LGUI     &sk LALT     &sk LSHFT     &sk LCTRL     &none                 &kp LEFT  &kp ENTER  &kp RIGHT   &kp END      &kp LEFT      &kp DOWN     &kp RIGHT  &kp BSPC    &kp ENTER
&none       &kp LC(Z)    &kp LC(X)    &kp LC(C)     &kp LC(V)     &kp LC(Y)  &kp SPACE            &kp DOWN               &kp LS(TAB)  &kp TAB       &none        &none      &kp DEL     &kp F17
                                                  &trans   &trans  &trans                                     &trans   &trans  &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        nav_layer {
            display-name = "NAV";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │      │Trsm │Ffox │Files│CodeL│Jopln│                ┃  ↑  ┃         │     │Alt-1│Alt-2│Alt-3│Alt-4│      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │ TAB  │Signl│Skype│Slack│Build│NTerm│          ┃  ←  ┃enter┃  →  ┃   │     │Wksp1│Wksp2│Wkrp3│Wksp4│C-PGUP│
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │ScrpB│     │TCopy│TPast│     │ ┃MUTE┃         ┃  ↓  ┃         │     │T Lft│T Rgt│Srch-│Srch+│C-PGDN│
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │Alt ←│     │Alt →│
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&none       APP_TRSM     APP_FFOX     APP_FILE      APP_CODE      APP_JOPL                        &kp UP                 &none      &kp LA(N1)    &kp LA(N2)   &kp LA(N3) &kp LA(N4)  &none
&kp LA(TAB) APP_SIGN     APP_SKYP     APP_SLAC      APP_BTRM      APP_NTRM              &kp LEFT  &kp ENTER  &kp RIGHT   &none      &kp LG(F1)    &kp LG(F2)   &kp LG(F3) &kp LG(F4)  &kp LC(PGUP)
&none       APP_SCRP     &none        &kp LC(LS(C)) &kp LC(LS(V)) &none      &kp SPACE            &kp DOWN               &none      TAB_L         TAB_R        &srch_prv  &srch_nxt   &kp LC(PGDN)
                                                  &trans   &trans  &trans                                     &kp LA(LEFT) &trans  &kp LA(RIGHT)
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        func_layer {
            display-name = "FUNC";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │ ESC  │  Q  │ F7  │ F8  │ F9  │ F12 │                ┃  ↑  ┃         │BTrst│ BT1 │ BT2 │ BT3 │ BT4 │RESET │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │ TAB  │  A  │ F1  │ F2  │ F3  │ F11 │          ┃  ←  ┃enter┃  →  ┃   │     │     │     │     │     │ BOOT │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │CTL/SP│  Z  │ F4  │ F5  │ F6  │ F10 │ ┃MUTE┃         ┃  ↓  ┃         │     │     │     │     │     │      │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │     │     │     │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&none       &none        &kp F7       &kp F8        &kp F9        &kp F12                       &kp UP                 &bt BT_CLR_ALL &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &sys_reset
&none       &none        &kp F1       &kp F2        &kp F3        &kp F11             &kp LEFT  &kp ENTER  &kp RIGHT   &none      &none         &none        &none      &none       &bootloader
&none       &none        &kp F4       &kp F5        &kp F6        &kp F10  &kp SPACE            &kp DOWN               &none      &none         &none        &none      &none       &none
                                                  &trans   &trans  &trans                                     &trans   &trans  &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

    };
};
