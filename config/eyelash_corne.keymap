#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include <input/processors.dtsi>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#undef ZMK_MOUSE_DEFAULT_MOVE_VAL
#undef ZMK_MOUSE_DEFAULT_SCRL_VAL
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#define COLEMAK 0
#define MEDIA   1
#define SYMBOLS 2
#define EXTEND  3
#define NAV     4
#define FUNC    5
#define TMUX    6
#define SELECT1 7
#define SELECT2 8


#define KEYS_LEFT     0  1  2  3  4  5 13 14 15 16 17 18 28 29 30 31 32 33 // left-hand keys
#define KEYS_RIGHT    7  8  9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41 // right-hand keys
#define KEYS_THUMBS  42 43 44 45 46 47                                     // thumb keys
#define KEYS_5WAY     6 19 20 21 35                                        // five-way switch
#define KEY_ENCODER  34                                                    // push on rotary encoder

#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define U_WH_U &msc SCRL_UP
#define U_WH_D &msc SCRL_DOWN
#define U_WH_L &msc SCRL_LEFT
#define U_WH_R &msc SCRL_RIGHT

#define SELECT &select SELECT1 COLEMAK
#define SEL1_U &sel1_u SELECT2
#define SEL1_D &sel1_d SELECT2
#define SEL1_L &sel1_l SELECT2
#define SEL1_R &sel1_r SELECT2

#define EXT_CAPS &mo_caps EXTEND 0
#define SYMB_ALTGR &mo_sk SYMBOLS RALT
#define SLASH_DIRS &ht_dirs 0 SLASH
#define DOT_MACROS &ht_sentence 0 0
#define MEDIA_ESC &lt MEDIA ESC
#define MEDIA_ENT &lt MEDIA ENTER
#define EXT_TAB &lt EXTEND TAB
#define TMUX_SPC &lt TMUX SPC
#define LCTRL_LGUI &mt LCTRL LGUI
#define TAB_L &kp LC(LA(PG_UP))
#define TAB_R &kp LC(LA(PG_DN))

/* Application shortcuts */
#define APP_FFOX &kp LC(LG(W))
#define APP_FILE &kp LC(LG(F))
#define APP_CODE &kp LC(LG(L))
#define APP_JOPL &kp LC(LG(J))
#define APP_SIGN &kp LC(LG(A))
#define APP_SKYP &kp LC(LG(Y))
#define APP_SLAC &kp LC(LG(S))
#define APP_BTRM &kp LC(LG(B))
#define APP_NTRM &kp LC(LG(T))
#define APP_SCRP &kp LC(LG(X))
#define APP_TRSM &kp LC(LG(O))

/* Awkward layer lock */
/* Lock: press lock key, release mo layer, release lock */
/* Unlock: tap lock key */
#define LOCK_SYM &llock SYMBOLS
#define LOCK_EXT &llock EXTEND
#define LOCK_MED &llock MEDIA

//#include "private_macros.dtsi"

/ {
    macros {
        // Single Alt-tab to swap to the previous window instead of cycling through
        prv_wnd: previous_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&macro_press &kp LALT>,
                <&macro_tap &kp TAB>,
                <&macro_release &kp LALT>;
        };
        // Layer lock, sort-of
        llock: layer_lock {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_pause_for_release>,
                <&macro_param_1to1>,
                <&macro_tap &tog MACRO_PLACEHOLDER>;
        };
        macro_qu: macro_qu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp Q>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp U>
                ;
        };
        parent_dir: parent_dir {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_release &kp LSHFT>
                , <&macro_tap &kp DOT &kp DOT &kp SLASH>
                ;
        };
        home_dir: home_dir {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp TILDE &kp SLASH>;
        };
        new_sentence: new_sentence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp DOT &kp SPACE>
                , <&sk LSHFT>
                ;
        };
        workspace: workspace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_release &kp LSHFT>
                , <&macro_tap &kp TILDE &kp SLASH>
                , <&macro_tap &kp W &kp O &kp R &kp K &kp S &kp P &kp A &kp C &kp E>
                , <&macro_tap &kp SLASH>
                ;
        };
        vimcmd: vimcmd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp ESC &kp COLON>;
        };
        // Symbols macros
        c_comment: c_comment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp SLASH &kp STAR &kp SPACE &kp SPACE &kp STAR &kp SLASH>
                , <&macro_tap &kp LEFT &kp LEFT &kp LEFT>
                ;
        };
        greater_equal: greater_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp GT &kp EQUAL>;
        };
        greater_equal_spaces: greater_equal_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap  &kp SPC &kp GT &kp EQUAL &kp SPC>;
        };
        less_equal: less_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LT &kp EQUAL>;
        };
        less_equal_spaces: less_equal_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SPC &kp LT &kp EQUAL &kp SPC>;
        };
        not_equal: not_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp EXCL &kp EQUAL>;
        };
        not_equal_spaces: not_equal_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SPC &kp EXCL &kp EQUAL &kp SPC>;
        };
        equal_spaces: equal_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&macro_release &kp LSHFT>,
                <&macro_tap &kp SPC &kp EQUAL &kp SPC>;
        };
        equal_equal: equal_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp EQUAL &kp EQUAL>;
        };
        equal_equal_spaces: equal_equal_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SPC &kp EQUAL &kp EQUAL &kp SPC>;
        };
        amps_spaces: amps_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SPC &kp AMPS &kp SPC>;
        };
        amps_amps: amps_amps {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp AMPS &kp AMPS>;
        };
        amps_amps_spaces: amps_amps_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SPC &kp AMPS &kp AMPS &kp SPC>;
        };
        lpar_rpar: lpar_rpar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LPAR &kp RPAR &kp LEFT>;
        };
        rpar_newline: rpar_newline {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp RPAR &kp SEMI &kp ENTER>;
        };
        brc_lri: braces_left_right_inside {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LBRC &kp RBRC &kp LEFT>;
        };
        brc_lr: braces_left_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LBRC &kp RBRC>;
        };
        lbkt_rbkt: lbkt_rbkt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LBKT &kp RBKT &kp LEFT>;
        };
        pipe_pipe: pipe_pipe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp PIPE &kp PIPE>;
        };
        pipe_pipe_spaces: pipe_pipe_spaces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SPC &kp PIPE &kp PIPE &kp SPC>;
        };
        // Help macros
        help_main: help_main {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp INTERNATIONAL_1>
                , <&macro_pause_for_release>
                , <&macro_tap &kp LANGUAGE_9>
                ;
        };
        help_altgr: help_altgr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LA(INTERNATIONAL_1)>
                , <&macro_pause_for_release>
                , <&macro_tap &kp LANGUAGE_9>
                ;
        };
        help_extend: help_extend {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp INTERNATIONAL_2>
                , <&macro_pause_for_release>
                , <&macro_tap &kp LANGUAGE_9>
                ;
        };
        help_nav: help_nav {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp INTERNATIONAL_3>
                , <&macro_pause_for_release>
                , <&macro_tap &kp LANGUAGE_9>
                ;
        };
        help_symbols: help_symbols {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp INTERNATIONAL_5>
                , <&macro_pause_for_release>
                , <&macro_tap &kp LANGUAGE_9>
                ;
        };
        help_func: help_func {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp INTERNATIONAL_4>
                , <&macro_pause_for_release>
                , <&macro_tap &kp LANGUAGE_9>
                ;
        };
        help_media: help_media {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LANGUAGE_1>
                , <&macro_pause_for_release>
                , <&macro_tap &kp LANGUAGE_9>
                ;
        };

        // Select macros
        select: select_mode {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_tap &to MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_2to1>,
                <&macro_tap &to MACRO_PLACEHOLDER>
                ;
        };
        sel1_r: select1_right {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp RIGHT>, <&macro_tap &kp LEFT>
                , <&macro_press &kp LSFT>, <&macro_tap &kp RIGHT>, <&macro_release &kp LSFT>, <&macro_release &kp LCTL>
                , <&macro_param_1to1>
                , <&macro_tap &to MACRO_PLACEHOLDER>
                ;
        };
        sel1_l: select1_left {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp LEFT>, <&macro_tap &kp RIGHT>
                , <&macro_press &kp LSFT>, <&macro_tap &kp LEFT>, <&macro_release &kp LSFT>, <&macro_release &kp LCTL>
                , <&macro_param_1to1>
                , <&macro_tap &to MACRO_PLACEHOLDER>
                ;
        };
        sel1_u: select1_up {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_tap &kp END>, <&macro_tap &kp RIGHT>
                , <&macro_press &kp LSFT>, <&macro_tap &kp UP>, <&macro_release &kp LSFT>
                , <&macro_param_1to1>
                , <&macro_tap &to MACRO_PLACEHOLDER>
                ;
        };
        sel1_d: select1_down {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_tap &kp HOME>, <&macro_tap &kp HOME>
                , <&macro_press &kp LSFT>, <&macro_tap &kp DOWN>, <&macro_release &kp LSFT>
                , <&macro_param_1to1>
                , <&macro_tap &to MACRO_PLACEHOLDER>
                ;
        };
        sel2_r: select2_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_press &kp LSFT>, <&macro_tap &kp RIGHT>, <&macro_release &kp LSFT>, <&macro_release &kp LCTL>
                ;
        };
        sel2_l: select2_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_press &kp LSFT>, <&macro_tap &kp LEFT>, <&macro_release &kp LSFT>, <&macro_release &kp LCTL>
                ;
        };
        sel2_u: select2_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSFT>, <&macro_tap &kp UP>, <&macro_release &kp LSFT>
                ;
        };
        sel2_d: select2_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSFT>, <&macro_tap &kp DOWN>, <&macro_release &kp LSFT>
                ;
        };

        // TMUX macros
        tm_n: tmux_n {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>, <&macro_release &kp LCTL>
                , <&macro_tap &kp N>
                ;
        };
        tm_i: tmux_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>, <&macro_release &kp LCTL>
                , <&macro_tap &kp I>
                ;
        };
        tm_u: tmux_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>, <&macro_release &kp LCTL>
                , <&macro_tap &kp U>
                ;
        };
        tm_e: tmux_e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>, <&macro_release &kp LCTL>
                , <&macro_tap &kp E>
                ;
        };
        tm_l: tmux_l {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>, <&macro_release &kp LCTL>
                , <&macro_tap &kp L>
                ;
        };
        tm_y: tmux_y {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>, <&macro_release &kp LCTL>
                , <&macro_tap &kp Y>
                ;
        };
        tm_j: tmux_j {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>, <&macro_release &kp LCTL>
                , <&macro_tap &kp J>
                ;
        };
        tm_m: tmux_m {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>, <&macro_release &kp LCTL>
                , <&macro_tap &kp M>
                ;
        };
        tm_z: tmux_z {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>, <&macro_release &kp LCTL>
                , <&macro_tap &kp Z>
                ;
        };
        tm_cm: tmux_copy_mode {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>, <&macro_release &kp LCTL>
                , <&macro_tap &kp LBKT>
                ;
        };
        tm_cw: tmux_create_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>, <&macro_release &kp LCTL>
                , <&macro_tap &kp C>
                ;
        };
        tm_lsw: tmux_list_windows {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>, <&macro_release &kp LCTL>
                , <&macro_tap &kp W>
                ;
        };
        tm_rcnf: tmux_reload_config {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>, <&macro_release &kp LCTL>
                , <&macro_tap &kp R>
                ;
        };
        tm_clft: tmux_ctrl_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>
                , <&macro_tap &kp LEFT>
                , <&macro_release &kp LCTL>
                ;
        };
        tm_crght: tmux_ctrl_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>
                , <&macro_tap &kp RIGHT>
                , <&macro_release &kp LCTL>
                ;
        };
        tm_cup: tmux_ctrl_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>
                , <&macro_tap &kp UP>
                , <&macro_release &kp LCTL>
                ;
        };
        tm_cdn: tmux_ctrl_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTL>, <&macro_tap &kp A>
                , <&macro_tap &kp DOWN>
                , <&macro_release &kp LCTL>
                ;
        };

        // Leader key macros
        lk_ccomment: leader_c_comment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp SLASH &kp STAR &kp SPC &kp SPC &kp STAR &kp SLASH>
                , <&macro_tap &kp LEFT &kp LEFT &kp LEFT>
                ;
        };
        lk_cinclude: leader_c_include {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp HASH &kp I &kp N &kp C &kp L &kp U &kp D &kp E &kp SPC>
                ;
        };
        lk_cinclude_qts: leader_c_include_quotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp HASH &kp I &kp N &kp C &kp L &kp U &kp D &kp E &kp SPC>
                , <&macro_tap &kp DQT &kp DQT &kp LEFT>
                ;
        };
        lk_cdefine: leader_c_define {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp HASH &kp D &kp E &kp F &kp I &kp N &kp E &kp SPC>
                ;
        };
        lk_cstring: leader_c_string {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp S &kp T &kp D &kp COL &kp COL &kp S &kp T &kp R &kp I &kp N &kp G>
                ;
        };
        lk_cvector: leader_c_vector {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp S &kp T &kp D &kp COL &kp COL &kp V &kp E &kp C &kp T &kp O &kp R>
                ;
        };

        
    };

    behaviors {
//        leader: leader {
//            compatible = "zmk,behavior-leader-key";
//            #binding-cells = <0>;
//            l_ccomment { sequence = <C C>; bindings = <&lk_ccomment>; };
//            l_cinclude { sequence = <C I>; bindings = <&lk_cinclude>; };
//            l_cincludeqts { sequence = <C I I>; bindings = <&lk_cinclude_qts>; };
//            l_cdefine { sequence = <C D>; bindings = <&lk_ccomment>; };
//            l_cstring { sequence = <C S>; bindings = <&lk_cstring>; };
//            l_cvector { sequence = <C V>; bindings = <&lk_cvector>; };
//            l_ccomment { sequence = <C C>; bindings = <&lk_ccomment>; };
//            //l_priv_cemail { sequence = <X X>; bindings = <&priv_cemail>; };
//            //l_priv_comb { sequence = <X C>; bindings = <&priv_comp>; };
//        };

        hrl: home_row_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_RIGHT KEYS_THUMBS KEYS_5WAY>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        hrr: home_row_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_LEFT KEYS_THUMBS KEY_ENCODER>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        mo_capsword: mo_capsword {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&caps_word>;
        };

        mo_caps: mo_caps {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&td_caps>;
        };

        mo_sk: mo_sticky {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&mo>, <&sk>;
        };

        ht_dirs: ht_dirs {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&dir_hup>, <&kp>;
        };

        ht_sentence: ht_sentence {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&sentence_wksp>, <&dot_tld>;
        };

        td_boot: td_bootloader {
            compatible = "zmk,behavior-tap-dance";
            display-name = "BOOT";
            #binding-cells = <0>;
            bindings = <&none>, <&bootloader>;
        };

        td_btclr: td_bluetooth_clear {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&none>, <&bt BT_CLR_ALL>;
        };

        td_extcaps: tap_dance_ext_caps {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo_capsword EXTEND 0>, <&kp CAPSLOCK>;
        };

        td_caps: tap_dance_caps {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&caps_word>, <&kp CAPSLOCK>;
        };

        comm_grv: comma_grave {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp GRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_tld: dot_tilde {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp TILDE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        at_caret: at_caret {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp AT>, <&kp CARET>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dlr_prc: dollar_percent {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOLLAR>, <&kp PERCENT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        srch_prv: search_prev {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(F3)>, <&kp LC(F8)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        srch_nxt: search_next {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp F3>, <&kp F8>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dir_hup: dir_home_up {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&home_dir>, <&parent_dir>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        sentence_wksp: newsentence_workspace {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&new_sentence>, <&workspace>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        // help main/altgr
        help_main_altgr: help_main_altgr {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&help_main>, <&help_altgr>;
            mods = <(MOD_RALT)>;
        };
        // Symbols mod-morphs and hold-taps
        ht_gt: ht_gt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&greater_equal_mm>, <&gt_sqt>;
        };
        gt_sqt: greaterthan_singlequote {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp GT>, <&kp SQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        greater_equal_mm: greater_equal_mm {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&greater_equal>, <&greater_equal_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ht_lt: ht_lt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&less_equal_mm>, <&lt_dqt>;
        };
        lt_dqt: lessthan_doublequote {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LT>, <&kp DQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        less_equal_mm: less_equal_mm {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&less_equal>, <&less_equal_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ht_pipe: ht_pipe {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&pipe_mm>, <&pipe_quest>;
        };
        pipe_mm: pipe_mm {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&pipe_pipe>, <&pipe_pipe_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        pipe_quest: pipe_quest {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PIPE>, <&kp QUESTION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ht_equl: ht_equal {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&equal_equal_mm>, <&equal_mm>;
        };
        equal_mm: equal_mm {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&equal_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        equal_equal_mm: equal_equal_morph{
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&equal_equal>, <&equal_equal_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ht_amps: ht_amps {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&amps_amps_mm>, <&amps_mm>;
        };
        amps_mm: amps_mm {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp AMPS>, <&amps_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        amps_amps_mm: amps_amps_morph{
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&amps_amps>, <&amps_amps_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ht_excl: ht_exclam {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&not_equal_mm>, <&excl_bslsh>;
        };
        excl_bslsh: exclam_bslash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EXCL>, <&kp BACKSLASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        not_equal_mm: not_equal_morph{
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&not_equal>, <&not_equal_spaces>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ht_lpar: ht_lpar {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&lpar_rpar>, <&kp>;
        };
        ht_rpar: ht_rpar {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&rpar_newline>, <&kp>;
        };
        ht_lbrc: ht_lbrc {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&brc_lri>, <&mm_lbrc>;
        };
        mm_lbrc: mm_lbrc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&td_brc>, <&kp RBRC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        td_brc: tap_dance_braces {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LBRC>, <&brc_lr>;
        };
        ht_lbkt: ht_lbkt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&lbkt_rbkt>, <&kp>;
        };
        // Mod-morphs on HRM on Symbols
        hrl_dot: home_row_left_dot {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&dot_comma>;
            hold-trigger-key-positions = <KEYS_RIGHT KEYS_THUMBS KEYS_5WAY>;
            hold-trigger-on-release;             // delay positional check until key-release
        };
        ht_hash: ht_hash {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            bindings = <&c_comment>, <&kp>;
        };
        hrr_slsh: home_row_right_slash {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&slsh_bslsh>;
            hold-trigger-key-positions = <KEYS_LEFT KEYS_THUMBS KEY_ENCODER>;
            hold-trigger-on-release;             // delay positional check until key-release
        };
        hrr_star: home_row_right_star {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&star_col>;
            hold-trigger-key-positions = <KEYS_LEFT KEYS_THUMBS KEY_ENCODER>;
            hold-trigger-on-release;             // delay positional check until key-release
        };
        dot_comma: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COMMA>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        slsh_bslsh: slash_bslash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp BACKSLASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        star_col: star_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp STAR>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <30>;
    };


    combos {
        compatible = "zmk,combos";
        combo_leader {
            timeout-ms = <50>;
            key-positions = <37 38>;
            bindings = <&leader>;
            layers = <COLEMAK>;
        };
        combo_qu {
            timeout-ms = <50>;
            key-positions = <14 29>;
            bindings = <&macro_qu>;
            layers = <COLEMAK>;
        };
        combo_under {
            timeout-ms = <50>;
            key-positions = <23 37>;
            bindings = <&kp UNDER>;
            layers = <COLEMAK>;
        };
        combo_minus {
            timeout-ms = <50>;
            key-positions = <8 23>;
            bindings = <&kp MINUS>;
            layers = <COLEMAK>;
        };
        combo_sqt {
            timeout-ms = <50>;
            key-positions = <9 24>;
            bindings = <&kp SQT>;
            layers = <COLEMAK>;
        };
        combo_dqt {
            timeout-ms = <50>;
            key-positions = <10 25>;
            bindings = <&kp DQT>;
            layers = <COLEMAK>;
        };
        combo_colon {
            timeout-ms = <50>;
            key-positions = <17 32>;
            bindings = <&kp COLON>;
            layers = <COLEMAK>;
        };
        combo_semi {
            timeout-ms = <50>;
            key-positions = <16 31>;
            bindings = <&kp SEMI>;
            layers = <COLEMAK>;
        };
        combo_excl {
            timeout-ms = <50>;
            key-positions = <26 40>;
            bindings = <&kp EXCL>;
            layers = <COLEMAK>;
        };
        combo_backslash {
            timeout-ms = <50>;
            key-positions = <25 39>;
            bindings = <&kp BACKSLASH>;
            layers = <SYMBOLS>;
        };
        combo_save {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp LC(S)>;
            layers = <COLEMAK>;
        };
        combo_copy {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp LC(C)>;
            //layers = <COLEMAK>;
        };
        combo_paste {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&kp LC(V)>;
            //layers = <COLEMAK>;
        };
        combo_cut {
            timeout-ms = <50>;
            key-positions = <30 32>;
            bindings = <&kp LC(X)>;
            //layers = <COLEMAK>;
        };
        combo_undo {
            timeout-ms = <50>;
            key-positions = <29 30>;
            bindings = <&kp LC(Z)>;
            //layers = <COLEMAK>;
        };
        combo_redo {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&kp LC(Y)>;
            //layers = <COLEMAK>;
        };
        combo_vimcmd {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&vimcmd>;
            layers = <COLEMAK>;
        };
        combo_media {
            timeout-ms = <50>;
            slow-release;
            key-positions = <0 1>;
            bindings = <&tog MEDIA>;
            layers = <COLEMAK MEDIA>;
        };
        // Help combos
        combo_help_main_altgr {
            timeout-ms = <50>;
            slow-release;
            key-positions = <32 37>;
            bindings = <&help_main_altgr>;
            layers = <COLEMAK>;
        };
        combo_help_extend {
            timeout-ms = <50>;
            slow-release;
            key-positions = <32 37>;
            bindings = <&help_extend>;
            layers = <EXTEND>;
        };
        combo_help_nav {
            timeout-ms = <50>;
            slow-release;
            key-positions = <32 37>;
            bindings = <&help_nav>;
            layers = <NAV>;
        };
        combo_help_symbols {
            timeout-ms = <50>;
            slow-release;
            key-positions = <32 37>;
            bindings = <&help_symbols>;
            layers = <SYMBOLS>;
        };
        combo_help_func {
            timeout-ms = <50>;
            slow-release;
            key-positions = <32 37>;
            bindings = <&help_func>;
            layers = <FUNC>;
        };
        combo_help_media {
            timeout-ms = <50>;
            slow-release;
            key-positions = <32 37>;
            bindings = <&help_media>;
            layers = <MEDIA>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "COLEMK";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │MD/ESC│  Q  │  W  │  F  │  P  │  B  │                ┃  ↑  ┃         │  J  │  L  │  U  │  Y  │  ;  │ BKSP │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │EX/TAB│  A  │  R  │  S  │  T  │  G  │          ┃  ←  ┃enter┃  →  ┃   │  M  │  N  │  E  │  I  │  O  │MD/ENT│
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │CTL/SP│  Z  │  X  │  C  │  D  │  V  │ ┃MUTE┃         ┃  ↓  ┃         │  K  │  H  │ , ` │ . ~ │  /  │Alt/' │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │ NAV │ SFT │ EXT │                        │ SYM │ SPC │ Fn  │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
MEDIA_ESC  &kp Q        &kp W        &kp F         &kp P         &kp B                           &kp UP                 &kp J        &kp L         &kp U        &kp Y        &kp SEMI    &kp BSPC
EXT_TAB    &hrl LGUI A  &hrl LALT R  &hrl LSHFT S  &hrl LCTRL T  &kp G                 &kp LEFT  &kp ENTER  &kp RIGHT   &kp M        &hrr LCTRL N  &hrr LSHFT E &hrr LALT I  &hrr LGUI O MEDIA_ENT
LCTRL_LGUI &kp Z        &kp X        &kp C         &kp D         &kp V      &kp SPACE            &kp DOWN               &kp K        &kp H         &comm_grv    DOT_MACROS   SLASH_DIRS  &mt LALT SQT
                                                  &mo NAV  &kp LSHIFT  EXT_CAPS                                 SYMB_ALTGR  TMUX_SPC  &mo FUNC
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        media_layer {
            display-name = "MEDIA";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │ ESC  │MUTE │VOL- │VOL+ │ MIC │ F5  │                ┃ s↑  ┃         │     │ mL  │ m↑  │ mR  │     │ PGUP │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │BRI- │BRI+ │DISP │     │          ┃ s←  ┃enter┃ s→  ┃   │ZOOM+│ m←  │ m↓  │ m→  │  ↑  │ PGDN │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │PLAY │STOP │PREV │NEXT │     │ ┃MUTE┃         ┃ s↓  ┃         │ZOOM-│ mM  │     │  ←  │  ↓  │  →   │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │HOME │     │ END │I
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&kp ESC    &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP  &kp F20       &kp F5                        U_WH_U             LOCK_MED      &mkp LCLK    U_MS_U      &mkp RCLK    &none       &kp PG_UP
&trans     &none        &kp C_BRI_DN &kp C_BRI_UP  &none         &none                 U_WH_L  &kp ENTER  U_WH_R  &kp LC(PLUS)  U_MS_L       U_MS_D      U_MS_R       &kp UP      &kp PG_DN
&none      &kp C_PLAY   &kp C_STOP   &kp C_PREV    &kp C_NEXT    &none      &kp SPACE          U_WH_D             &kp LC(MINUS) &mkp MCLK    &none       &kp LEFT     &kp DOWN    &kp RIGHT
                                                  &trans   &trans  &trans                                     &kp HOME   &trans  &kp END
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        symbols_layer {
            display-name = "SYMBOLS";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │  x   │ > ' │  7  │  8  │  9  │ @ ^ │                ┃  ↑  ┃         │  &  │  (  │  )  │  {  │  }  │ BKSP │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │ TAB  │  .  │  1  │  2  │  3  │  #  │          ┃  ←  ┃enter┃  →  ┃   │  =  │  -  │  +  │  /  │  *  │ ENT  │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │ < " │  4  │  5  │  6  │ $ % │ ┃MUTE┃         ┃  ↓  ┃         │ ! \ │  _  │ , ` │ . ~ │ | ? │ Comp │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │Sft/0│     │                        │     │     │     │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&kp X      &ht_gt 0 0    &kp N7       &kp N8        &kp N9        &at_caret                        &kp UP                 &ht_amps 0 0 &ht_lpar 0 LPAR &ht_rpar 0 RPAR  &ht_lbrc 0 0 &kp RBRC    &kp BSPC
&kp TAB    &hrl_dot LGUI 0 &hrl LALT N1 &hrl LSHFT N2 &hrl LCTRL N3 &ht_hash 0 HASH      &kp LEFT  &kp ENTER  &kp RIGHT   &ht_equl 0 0 &hrr LCTRL MINUS &hrr LSHFT PLUS &hrr_slsh LALT 0 &hrr_star LGUI 0 &kp ENTER
LOCK_SYM   &ht_lt 0 0    &kp N4       &kp N5        &kp N6        &dlr_prc    &kp SPACE            &kp DOWN               &ht_excl 0 0 &kp UNDER     &ht_lbkt 0 LBKT    &kp RBKT     &ht_pipe 0 0 &kp RGUI
                                                  &trans  &mt LSHIFT N0 &trans                                   &trans  &trans  &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        extend_layer {
            display-name = "EXTEND";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │ ESC  │  Q  │  W  │  F  │  P  │  B  │                ┃  ↑  ┃         │  J  │  L  │  U  │  Y  │  ;  │ BKSP │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │ TAB  │  A  │  R  │  S  │  T  │  G  │          ┃  ←  ┃enter┃  →  ┃   │  M  │  N  │  E  │  I  │  O  │ ENT  │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │CTL/SP│  Z  │  X  │  C  │  D  │  V  │ ┃MUTE┃         ┃  ↓  ┃         │  K  │  H  │ , ` │ . ~ │  /  │Alt/' │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │ GUI │ SFT │ SPC │                        │ ENT │ SPC │ ALT │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&none       &kp ESC      &kp LC(W)    &kp LC(F)     &none         &kp INS                         &kp UP                 &kp HOME     &kp PGUP      &kp UP       &kp PGDN   &none       &kp DEL
&prv_wnd    &sk LGUI     &sk LALT     &sk LSHFT     &sk LCTRL     SELECT                &kp LEFT  &kp ENTER  &kp RIGHT   &kp END      &kp LEFT      &kp DOWN     &kp RIGHT  &kp BSPC    &kp ENTER
LOCK_EXT    &kp LC(Z)    &kp LC(X)    &kp LC(C)     &kp LC(V)     &kp LC(Y)  &kp SPACE            &kp DOWN               &kp LS(TAB)  &kp TAB       &none        &none      &kp DEL     &kp F17
                                                  &trans   &trans  &trans                                     &trans   &trans  &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        nav_layer {
            display-name = "NAV";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │      │Trsm │Ffox │Files│CodeL│Jopln│                ┃  ↑  ┃         │     │Alt-1│Alt-2│Alt-3│Alt-4│      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │ TAB  │Signl│Skype│Slack│Build│NTerm│          ┃  ←  ┃enter┃  →  ┃   │     │Wksp1│Wksp2│Wkrp3│Wksp4│C-PGUP│
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │ScrpB│     │TCopy│TPast│     │ ┃MUTE┃         ┃  ↓  ┃         │     │T Lft│T Rgt│Srch-│Srch+│C-PGDN│
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │Alt ←│     │Alt →│
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&none       APP_TRSM     APP_FFOX     APP_FILE      APP_CODE      APP_JOPL                        &kp UP                 &none      &kp LA(N1)    &kp LA(N2)   &kp LA(N3) &kp LA(N4)  &none
&kp LA(TAB) APP_SIGN     APP_SKYP     APP_SLAC      APP_BTRM      APP_NTRM              &kp LEFT  &kp ENTER  &kp RIGHT   &none      &kp LG(F1)    &kp LG(F2)   &kp LG(F3) &kp LG(F4)  &kp LC(PGUP)
&none       APP_SCRP     &none        &kp LC(LS(C)) &kp LC(LS(V)) &none      &kp SPACE            &kp DOWN               &none      TAB_L         TAB_R        &srch_prv  &srch_nxt   &kp LC(PGDN)
                                                  &trans   &trans  &trans                                     &kp LA(LEFT) &trans  &kp LA(RIGHT)
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        func_layer {
            display-name = "FUNC";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │RESET │     │ F7  │ F8  │ F9  │ F12 │                ┃  ↑  ┃         │BTrst│ BT1 │ BT2 │ BT3 │ BT4 │RESET │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │ BOOT │     │ F1  │ F2  │ F3  │ F11 │          ┃  ←  ┃enter┃  →  ┃   │ RGB │Bri- │Bri+ │     │     │ BOOT │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │ F4  │ F5  │ F6  │ F10 │ ┃MUTE┃         ┃  ↓  ┃         │SLEEP│     │     │     │     │      │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │     │     │     │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&sys_reset  &none        &kp F7       &kp F8        &kp F9        &kp F12                       &kp UP                 &td_btclr       &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &sys_reset
&td_boot    &none        &kp F1       &kp F2        &kp F3        &kp F11             &kp LEFT  &kp ENTER  &kp RIGHT   &rgb_ug RGB_TOG &rgb_ug RGB_BRD &rgb_ug RGB_BRI        &none        &none        &td_boot
&none       &none        &kp F4       &kp F5        &kp F6        &kp F10  &kp SPACE            &kp DOWN               &kp C_SLEEP     &none        &none        &none        &none        &none
                                                  &trans   &trans  &trans                                     &trans   &trans  &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        tmux_layer {
            display-name = "TMUX";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │      │     │Lst W│     │     │     │                ┃  ↑  ┃         │     │Mv L │ Up  │Mv R │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │Rload│     │     │     │          ┃  ←  ┃     ┃  →  ┃   │     │ Prv │ Dwn │ Nxt │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │ Zoom │P Exp│     │Crt W│     │     │ ┃    ┃         ┃  ↓  ┃         │     │CopyM│     │     │     │      │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │     │     │     │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&none       &none        &tm_lsw      &none         &none         &none                         &tm_cup                 &tm_j    &tm_l    &tm_u     &tm_y     &none     &none
&none       &kp LGUI     &tm_rcnf     &kp LALT      &kp LCTL      &none               &tm_clft  &none       &tm_crght   &tm_m    &tm_n    &tm_e     &tm_i     &none     &none
&trans      &tm_z        &none        &tm_cw        &none         &none  &none                  &tm_cdn                 &none    &tm_cm   &none     &none     &none     &none
                                                  &none    &trans    &none                                           &none   &none  &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        select1_layer {
            display-name = "SLCT1";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │      │     │     │     │     │     │                ┃  ↑  ┃         │     │     │     │     │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │     │     │     │     │          ┃  ←  ┃     ┃  →  ┃   │     │     │     │     │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │     │     │     │     │ ┃    ┃         ┃  ↓  ┃         │     │     │     │     │     │      │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │     │     │     │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&none       &none        &none        &none         &none         &none                         &none                   &none    &none    SEL1_U    &none     &none     &none
&none       &none        &none        &none         &none         &none               &none     &none       &none       &none    SEL1_L   SEL1_D    SEL1_R    &none     &none
&none       &none        &none        &none         &none         &none  &none                  &none                   &none    &none    &none     &none     &none     &none
                                                  &none   &none  &none                                           &none   &none  &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        select2_layer {
            display-name = "SLCT2";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │      │     │     │     │     │     │                ┃  ↑  ┃         │     │     │     │     │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │     │     │     │     │          ┃  ←  ┃     ┃  →  ┃   │     │     │     │     │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │     │     │     │     │ ┃    ┃         ┃  ↓  ┃         │     │     │     │     │     │      │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │     │     │     │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&none       &none        &none        &none         &none         &none                         &none                   &none    &none    &sel2_u   &none     &none     &none
&none       &none        &none        &none         &none         &none               &none     &none       &none       &none    &sel2_l  &sel2_d   &sel2_r   &none     &none
&none       &none        &none        &none         &none         &none  &none                  &none                   &none    &none    &none     &none     &none     &none
                                                  &none   &none  &none                                           &none   &none  &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
/*
        none_layer {
            display-name = "NONE";

            // ┌──────┬─────┬─────┬─────┬─────┬─────┐                ┏━━━━━┓         ┌─────┬─────┬─────┬─────┬─────┬──────┐
            // │      │     │     │     │     │     │                ┃  ↑  ┃         │     │     │     │     │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤          ┏━━━━━┃━━━━━┃━━━━━┓   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │     │     │     │     │          ┃  ←  ┃     ┃  →  ┃   │     │     │     │     │     │      │
            // ├──────┼─────┼─────┼─────┼─────┼─────┤ ┏━━━━┓   ┗━━━━━┃━━━━━┃━━━━━┛   ├─────┼─────┼─────┼─────┼─────┼──────┤
            // │      │     │     │     │     │     │ ┃    ┃         ┃  ↓  ┃         │     │     │     │     │     │      │
            // └──────┴─────┴─────┴───┬─┴───┬─┴───┬─┴─┺━┯━━┛         ┗━━━━━┛     ┌───┴─┬───┴─┬───┴─┬───┴─────┴─────┴──────┘
            //                        │     │     │     │                        │     │     │     │
            //                        └─────┴─────┴─────┘                        └─────┴─────┴─────┘

            bindings = <
&none       &none        &none        &none         &none         &none                         &none                   &none    &none    &none     &none     &none     &none
&none       &none        &none        &none         &none         &none               &none     &none       &none       &none    &none    &none     &none     &none     &none
&none       &none        &none        &none         &none         &none  &none                  &none                   &none    &none    &none     &none     &none     &none
                                                  &none   &none  &none                                           &none   &none  &none
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
*/
    };
};
